{"version":3,"sources":["components/AlbumCard/AlbumCard.js","components/AlbumList/AlbumList.js","App.js","index.js"],"names":["AlbumCard","props","name","image","popularity","className","src","alt","AlbumList","userAlbums","console","log","id","style","display","flexWrap","justifyContent","map","album","clientId","redirect","App","useState","code","setCode","token","setToken","setRefreshToken","setExpiry","setRequestTime","userDisplayName","setUserDisplayName","userProduct","setUserProduct","userProfileUrl","setUserProfileUrl","setUserAlbums","useEffect","window","location","search","parseUrl","recievedCode","URLSearchParams","get","getAccessToken","fetch","method","headers","body","JSON","stringify","then","res","json","response","Date","toString","expires_in","access_token","refresh_token","catch","handleAlbums","rawAlbumList","albumList","item","images","url","onClick","replace","user","display_name","product","external_urls","spotify","href","albums","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.884f695a.chunk.js","sourcesContent":["import React from 'react';\n\nconst AlbumCard = (props) => {\n\nconst { name, image, popularity } = props\n\n  return(\n    <div className=\"br2 ba dark-gray b--black-10 mv2 mv4-ns w-50 ma3-ns w-20-ns center\">\n      <img  src={image} className=\"db w-100 br2 br--top\" alt=\"Album art\"/>\n      <div className=\"pa2 ph3-ns pb3-ns\">\n        <div className=\"dt w-100 mt1\">\n          <div className=\"dtc\">\n            <h1 className=\"f5 f4-ns mv0\">{name}</h1>\n          </div>\n          <div className=\"dtc tr\">\n            <h2 className=\"f5 mv0\">{popularity}</h2>\n          </div>\n        </div>\n        <p className=\"f6 lh-copy measure mt2 mid-gray\">\n          This is an album\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default AlbumCard\n","import React from 'react';\nimport AlbumCard from '../AlbumCard/AlbumCard.js';\n\nconst AlbumList = (props) => {\n\nconst { userAlbums } = props;\n\n    //if there are albums loaded, loop through them and display a card for each\n    //if not, do nothing\n    if (userAlbums) {\n        console.log('from the list component', userAlbums)\n        return(\n            <div id='AlbumList' style={{display: 'flex',flexWrap: 'wrap',justifyContent: 'space-around'}}>\n                {userAlbums.map(album => {\n                    return <AlbumCard key={album.id} name={album.name} image={album.image} popularity={album.popularity}/>\n                })}\n            </div>\n        )\n    } else {\n        return(null)\n    }\n}\n\nexport default AlbumList","import { useState, useEffect } from 'react';\nimport AlbumList from './components/AlbumList/AlbumList.js'\nimport './App.css';\nimport 'tachyons';\n\nconst clientId = 'ebcbc13ca3b34ed6a4cf0bf4d7579df9';\nconst redirect = 'https%3A%2F%2Fwww.jamescockayne.co.uk%2Fspotify-app%2F';\n\nconst App = () => {\n\n  //hooks for state\n  const [code, setCode] = useState(null)\n  const [token, setToken] = useState(null) // eslint-disable-next-line \n  const [refreshToken, setRefreshToken] = useState(null) // eslint-disable-next-line \n  const [expiry, setExpiry] = useState(null) // eslint-disable-next-line \n  const [requestTime, setRequestTime] = useState(null)\n  const [userDisplayName, setUserDisplayName] = useState(null)\n  const [userProduct, setUserProduct] = useState(null)\n  const [userProfileUrl, setUserProfileUrl] = useState(null)\n  const [userAlbums, setUserAlbums] = useState(null)\n\n  //Make request for API token on page load if there is a query string on the url\n  useEffect(() => {\n    (window.location.search !== \"\")?parseUrl():console.log('Please link with Spotify')\n    // eslint-disable-next-line\n  },[])\n\n  //grab the code parameter from the query string and pass it to getAccessToken()\n  const parseUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const recievedCode = urlParams.get('code')\n    //console.log('ran parseUrl, code was ')\n    //console.log(recievedCode)\n    setCode(recievedCode)\n    getAccessToken(recievedCode)\n  }\n\n  //send the code to the backend and update the state with the results\n  const getAccessToken = (recievedCode) => {\n      fetch('https://spotify-test-project.herokuapp.com', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          code: recievedCode,\n          clientId: clientId,\n          redirect: redirect\n        })\n      })\n      .then(res => res.json())\n      .then(response => {\n        console.log('ran getAccessToken()')\n        //console.log(response.access_token)\n        setRequestTime(new Date().toString())\n        setExpiry(response.expires_in)\n        setToken(response.access_token)\n        setRefreshToken(response.refresh_token)\n      })\n      .catch(console.log)  \n  }\n\n  //make a request for profile data and update state with basic details\n  const getUserData = () => {\n    fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      .then(response => response.json())\n      .then(user =>{\n        setUserDisplayName(user.display_name)\n        setUserProduct(user.product)\n        setUserProfileUrl(user.external_urls.spotify)\n      })\n      .catch(console.log)\n  }\n\n  const getUserAlbums = () => {\n    fetch('https://api.spotify.com/v1/me/albums?limit=50', {\n        method: 'GET',\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      .then(response => response.json())\n      .then(albums => {\n        handleAlbums(albums.items)\n      })\n  }\n\n  const handleAlbums = (rawAlbumList) => {\n    let albumList = rawAlbumList.map(item => {\n      return {\n        name: item.album.name,\n        image: item.album.images[0].url,\n        popularity: item.album.popularity,\n        id: item.album.id\n      } \n    })\n    setUserAlbums(albumList)\n  }\n\n  return (\n    //if there is no code stored, then the user must have no have logged in, so show them a 'connect' button\n    //else, they must have logged in, so show the credentials returned from the Spotify accounts service\n    code===null\n    ? <div className=\"App\">\n        <button style={{'margin': '10%'}} onClick={()=>window.location.replace(`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirect}&show_dialog=true&scope=user-read-private%20user-library-read`)}>Connect to Spotify!</button>\n      </div>\n    : <div className=\"App\">\n        <button style={{'margin': '3%'}} onClick={getUserData}>Get Account Information</button>\n        <p>\n          Your name is: {userDisplayName}<br />\n          Product: {userProduct}<br />\n          Your profile can be found <a href={userProfileUrl}>here.</a>\n        </p>\n        <button style={{'margin': '3%'}} onClick={getUserAlbums}>Get Albums!</button>\n        <AlbumList userAlbums={userAlbums}/>\n      </div>\n  )  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}